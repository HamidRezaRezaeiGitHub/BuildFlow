Title:
[backend] <short action> â€” <module/entity>

Context:
<Brief current state or problem (1â€“2 lines).>
<Desired outcome in one line.>

Read before acting:
- Inspect or update these files:
  - src/main/java/dev/hr/rezaei/buildflow/<module>/<File>.java
  - src/test/java/dev/hr/rezaei/buildflow/<module>/<TestFile>.java
  - (If applicable) src/main/resources/<config>.yml

Acceptance Criteria:
- <AC1: endpoint/service behavior or contract>
- <AC2: validation/persistence requirement>
- <AC3: tests in place (unit/integration as appropriate)>
- 'mvn -q -DskipTests=false clean test' and 'mvn -q -DskipTests=true package' complete without errors.

Constraints & Hints:
- <Constraint 1>
- <Constraint 2>
- <Hint 1>
- <Hint 2>

Deliverables:
- Summary of changed/created files and rationale.
- Brief test plan (what scenarios and assertions).

---
### ðŸ§© Example

Title:
[backend] Implement estimate calculation service â€” Estimation module

Context:
Estimation logic is mixed into controllers; we need a dedicated service for testability and reuse.

Read before acting:
- src/main/java/dev/hr/rezaei/buildflow/estimate/EstimateService.java
- src/test/java/dev/hr/rezaei/buildflow/estimate/EstimateServiceTest.java

Acceptance Criteria:
- Service supports AVERAGE and LATEST strategies.
- Unit tests cover both strategies and edge cases (no quotes).
- 'mvn -q -DskipTests=false clean test' and 'mvn -q -DskipTests=true package' complete without errors.

Constraints & Hints:
- Keep calculation pure; avoid I/O in service methods.
- Controller delegates to the service via clear interfaces.

Deliverables:
- File list and rationale.
- Test plan describing assertions for each strategy.